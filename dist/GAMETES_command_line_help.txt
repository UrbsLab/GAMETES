Usage: java -jar gametes.jar <program arguments>
If there are no arguments, the graphical user interface will be opened otherwise running in batch mode. Complete list of program arguments:

{-M,--model} Command to generate model(s) with specified model constraints
	{-h,--heritability} double Specifies the heritability of a given model.
	{-p,--caseProportion} double Specifies the caseProportion of a given model.
	{-d,--useOddsRatio} <true if present, false otherwise> Normally, the EDM difficulty model difficulty estimate is used to rank models for selection.  This parameter over-rides the default in favor of the COR difficulty estimate.
	{-a,--attributeAlleleFrequency} double Specifies the minor allele frequency of a given attribute in a model.  The number of times this parameter is specified determines the number of attributes that are included in the model.  E.g. 2-locus, 3-locus, 4-locus models.
	{-o,--modelOutputFile} string  Output file name/path.  This parameter is used for -M to specify how model files are saved, and how they will be named..

{-D,--dataset} Command to generate dataset(s) with specified dataset constraints.
	{-n,--alleleFrequencyMin} double Minimum minor allele frequency for randomly generated, non-predictive attributes in datasets.
	{-x,--alleleFrequencyMax} double Maximum minor allele frequency for randomly generated, non-predictive attributes in datasets.
	{-a,--totalAttributeCount} integer Total number of attributes to be generated in simulated dataset(s).
	{-m,--missingValueRate} double ???
	{-t,--totalCount} integer (continuous data only) How many samples to generate for each dataset.
	{-s,--caseCount} integer (discrete data only) Number of case instances in simulated dataset(s).  Cases have class = '1'.
	{-w,--controlCount} integer (discrete data only) Number of control instances in simulated dataset(s).  Controls have class = '0'.
	{-r,--replicateCount} integer Total number of replicate datasets generated from given model(s) to be randomly generated.
	{-o,--datasetOutputFile} string Output file name/path.  This parameter is used for -D to specify how dataset files are saved, and how they will be named.
	{-c,--continuous} <true if present, false otherwise> Directs algorithm to generate datasets with continuous-valued endpoints rather than binary discrete datasets.
	{-h,--mixedModelDatasetType} [heterogeneous, hierarchical] if there are multiple models use heterogeneous or hierarchical
	{-d,--standardDeviation} double The standard deviation around model penetrance values used to simulated continuous-valued endpoints.  Larger standard deviation values should yield noisier datasets, with a signal that is more difficult to detect.

{-i,--modelInputFile} string Path/Name of input model file used for generating dataset(s).
{-w,--modelWeight} double For each model, the relative weight compared to other models. If not specified all models will have equal weight. The weight/totalWeight determines the model fraction. The fraction is used in heterogeneous datasets to determine the # of rows generated from each model. In continuous hierarchical models, the fraction controls the relative contribution to the continuous endpoint. For discrete hierarchical models, weight is ignored. The order of the fractions is 1) new models and then 2) input models. 
{-v,--predictiveInputFile} string ???
{-z,--noiseInputFile} string a file containing snps data. The number of rows will determine your dataset output size.
{-q,--rasQuantileCount} integer Number of quantiles (i.e. number of models selected across a difficulty-ranked distribution) that will be saved to the model file.
{-p,--rasPopulationCount} integer Number of models to be generated, from which representative 'quantile'-models will be selected and saved.
{-t,--rasTryCount} integer Number of algorithmic attempts to generate a random model to satisfy parameter -p, before algorithm quits.
{-r,--randomSeed} integer Seed for random number generator used to simulate models and datasets. If specified, repeated runs will generate identical outputs. In this way, a colleague could recreate your datasets without needing to transfer the actual files.
{-h,--help} <true if present, false otherwise> What you are reading now
